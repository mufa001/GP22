package gp;
import javax.swing.SpinnerNumberModel;
import javax.swing.SpinnerListModel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileNameExtensionFilter;

import java.awt.Component;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.DefaultComboBoxModel;

import gp.math.jahuwaldt.jatex.MainWindow;

import javax.swing.JButton;

import com.inet.jortho.FileUserDictionary;
import com.inet.jortho.SpellChecker;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;




/**
 *
 * @author User
 */
public class mcqseter extends javax.swing.JFrame {

    /**
     * Creates new form mcqset
     */
    /*public mcqseter() {
        initComponents();
    }*/
	
	public  String  tst="";
	public  String  tp ="Above";
    main1_frame g;
    public static MainWindow main = null;
    public static int curPos = 0;
    public static JTextField textField = null;
    public static JTextArea textArea = null;
    
    public String imgpath="";
	public String abimgpath="";
	
	private void spellChecker(){
		  String userDicPath="dic/";
		  SpellChecker.setUserDictionaryProvider(new FileUserDictionary(userDicPath));
		  SpellChecker.registerDictionaries(getClass().getResource(userDicPath), "en");
		  SpellChecker.register(Op1);
		  SpellChecker.register(Op2);
		  SpellChecker.register(Op3);
		  SpellChecker.register(Op4);
		  SpellChecker.register(Question);
		  SpellChecker.register(Title);
		  
		  
	  }
	
	
	
    
    public mcqseter(main1_frame a) {
    	pic.addActionListener(new ActionListener() {
    		public void actionPerformed(ActionEvent e) {
    			JFileChooser fileChooser=new JFileChooser("C:\\");
        		FileNameExtensionFilter filter;
        		filter = new FileNameExtensionFilter("jpeg, gif and png files", "jpg", "gif", "png");
        		fileChooser.addChoosableFileFilter(filter);
        		int returnVal = fileChooser.showOpenDialog((Component)e.getSource());
        	    if (returnVal == JFileChooser.APPROVE_OPTION) {
        	        File file = fileChooser.getSelectedFile();
        	        String filename=fileChooser.getSelectedFile().getName();
        	        abimgpath=filename;
        	        try {
        	           imgpath = file.toString();
        	           
        	           String dest="C:\\Users\\User\\Desktop\\MyFiles\\java\\fwdtemplates(1)\\+"+filename;
        	           File f1=new File(imgpath);
        	           File f2=new File(dest);
        	           Files.copy(f1.toPath(),f2.toPath(),StandardCopyOption.REPLACE_EXISTING);
        	           System.out.println(imgpath);
        	        } catch (Exception ex) {
        	          System.out.println("problem accessing file"+file.getAbsolutePath());
        	        }
        	    } 
        	    else {
        	        System.out.println("File access cancelled by user.");
        	    }
    		}
    	});
        initComponents();
        spellChecker();
        g=a;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unused")
    private void TableActionPerformed(java.awt.event.ActionEvent evt){
   	 // TODO add your handling code here:
   
       table3 a=new table3(this);
       a.setVisible(true);
   	
   }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(){

        Title = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        qno = new javax.swing.JSpinner();
        qno.setModel(new SpinnerNumberModel(1, 0, 999, 1));
        jLabel2 = new javax.swing.JLabel();
        sqno = new javax.swing.JSpinner();
        sqno.setModel(new SpinnerNumberModel(1, 1, 999, 1));
        chngetitle = new javax.swing.JButton();
        chngetitle.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		 int no=(int) qno.getValue();
          	   if(g.mapper.containsKey(no)){
         	    	mcqbundel o=(mcqbundel)g.mapper.get(no);
         	    	o.title="\\question {"+Title.getText()+".\r\n";
         	    	o.utitle=Title.getText();
         	   }else{
         		   Title.setText("");
         	   }
          	   
          	   
          	
        		
        	}
        });
        jLabel3 = new javax.swing.JLabel();
        Table = new javax.swing.JButton();
        /*Table.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		 table3 a=new table3(this);
        	     a.setVisible(true);
        	}
        });*/
        Table.addActionListener(new java.awt.event.ActionListener() {
    		public void actionPerformed(java.awt.event.ActionEvent evt) {
    			TableActionPerformed(evt);
    		}
    	});
        jLabel4 = new javax.swing.JLabel();
        mks = new javax.swing.JSpinner();
        mks.setModel(new SpinnerNumberModel(0.0, 0.0, 100.0, 1.0));
        jLabel5 = new javax.swing.JLabel();
        Bloom = new javax.swing.JButton();
        Bloom.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		new BT().setVisible(true);
        	}
        });
        jScrollPane2 = new javax.swing.JScrollPane();
        Question = new javax.swing.JTextArea();
        Question.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseReleased(MouseEvent arg0) {
        		textField = null;
        		curPos = Question.getCaretPosition();
        		textArea = Question;
        	}
        });
        
        Question.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyReleased(KeyEvent arg0) {
        		textField = null;
        		curPos = Question.getCaretPosition();
        		textArea = Question;
        		
        	}
        });
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Op1 = new javax.swing.JTextField();
        Op1.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseReleased(MouseEvent e) {
        		textArea = null;
        		curPos = Op1.getCaretPosition();
        		textField = Op1;
        		
        	}
        });
        Op1.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyReleased(KeyEvent arg0) {
        		textArea = null;
        		curPos = Op1.getCaretPosition();
        		textField = Op1;
        		
        		
        	}
        });
        Op2 = new javax.swing.JTextField();
        Op2.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseReleased(MouseEvent arg0) {
        		textArea = null;
        		curPos = Op2.getCaretPosition();
        		textField = Op2;
        	}
        });
        Op2.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyReleased(KeyEvent arg0) {
        		textArea = null;
        		curPos = Op2.getCaretPosition();
        		textField = Op2;
        	}
        });
        /*Op2.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyReleased(KeyEvent e) {
        		textField = Op2;
        		
        	}
        });*/
        Op3 = new javax.swing.JTextField();
        Op3.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseReleased(MouseEvent e) {
        		textArea = null;
        		curPos = Op3.getCaretPosition();
        		textField = Op3;
        	}
        });
        Op3.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyReleased(KeyEvent arg0) {
        		textArea = null;
        		curPos = Op3.getCaretPosition();
        		textField = Op3;
        	}
        });
        Op4 = new javax.swing.JTextField();
        Op4.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseReleased(MouseEvent e) {
        		textArea = null;
        		curPos = Op4.getCaretPosition();
        		textField = Op4;
        	}
        });
        Op4.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyReleased(KeyEvent e) {
        		textArea = null;
        		curPos = Op4.getCaretPosition();
        		textField = Op4;
        	}
        });
        
        Add = new javax.swing.JButton();
        Add.addActionListener(new ActionListener(){
        	public void actionPerformed(ActionEvent arg0){
        	 
        	 int no= (int) qno.getValue();
       		 Double mark=(Double)mks.getValue();
       		 int sqn=(int)sqno.getValue();
       		 /*g.mcc+=1;
       		 g.mcm+=mark;
       		 g.mc.setText(String.valueOf(g.mcc));
       		 g.mm.setText(String.valueOf(g.mcm));
       		 g.tq.setText(String.valueOf(g.mcc));
       		 g.tm.setText(String.valueOf(g.mcm));
       		 */
       		String dtable="";
       		String utable="";
               
       		if(tst!=""){
       		   if(tp=="Above"){
       			   utable =tst;
       			   
       		   }
       		   else{
       			   dtable=tst; 
       		   }
       		}

       		String pic="";
       		if(abimgpath!=null){
       			pic="\\includegraphics[width=0.5\\textwidth]{"+"+"+abimgpath+"}\\break\r\n";
       		      
       		}
            

       		String MCQ = pic+utable+"\\subquestion{"+Question.getText()+"\r\n"+dtable+
       		"\\begin{enumerate}\r\n"+
       		"\\item "+Op1.getText()+"\r\n"+ 
       		"\\item "+Op2.getText()+"\r\n"+
       		"\\item "+Op3.getText()+"\r\n"+
       		"\\item "+Op4.getText()+"\r\n"+
       		"\\end{enumerate}\r\n"+
       		"\\qmarks{"+mks.getValue()+"}\r\n"+
       		"}\r\n";



       		if(g.mapper.containsKey(no)){
       			mcqbundel testa=(mcqbundel)g.mapper.get(no);
       			g.mapper.remove(no);
       			testa.title="\\question {"+Title.getText()+".\r\n";
       			testa.utitle=Title.getText();
       			//testa.mcq+=MCQ;
       			//System.out.println(testa.mcq);
       			if(testa.mcqlist.containsKey(sqn)){
       			//main_frame.mapper.put(no,testa);
       			mcqo r=(mcqo)testa.mcqlist.get(sqn);
       			testa.mcqlist.remove(sqn);
       			r.mcq=MCQ;
       			r.subquestion=Question.getText();
       			r.ans1=Op1.getText();
       			r.ans2=Op1.getText();
       			r.ans3=Op1.getText();
       			r.ans4=Op1.getText();
       			r.mark=mks.getValue().toString();
       			r.btarea=area.getSelectedItem().toString();
       			/*
       			 
       			 */
       			 
       			//r.btarea=
       		    testa.mcqlist.put(sqn,r);
       		    pic="";
  		        abimgpath="";
       			}else{
       				
       				 g.mcc+=1;
              		 g.mcm+=mark;
              		 g.tcq+=1;
              		 g.tmc+=mark;
              		 g.mc.setText(String.valueOf(g.mcc));
              		 g.mm.setText(String.valueOf(g.mcm));
              		 g.tq.setText(String.valueOf(g.tcq));
              		 g.tm.setText(String.valueOf(g.tmc));
       				
              		mcqo r=new mcqo(sqn,MCQ);
       				r.subquestion=Question.getText();
           			r.ans1=Op1.getText();
           			r.ans2=Op1.getText();
           			r.ans3=Op1.getText();
           			r.ans4=Op1.getText();
           			r.mark=mks.getValue().toString();
           			r.btarea=area.getSelectedItem().toString();
           		    testa.mcqlist.put(sqn,r);
           		    pic="";
      		        abimgpath="";
       				
       			}
       			g.mapper.put(no,testa);
       			
       		}
       		else{
       			g.mcc+=1;
         		 g.mcm+=mark;
         		 g.tcq+=1;
         		 g.tmc+=mark;
         		 g.mc.setText(String.valueOf(g.mcc));
         		 g.mm.setText(String.valueOf(g.mcm));
         		 g.tq.setText(String.valueOf(g.tcq));
         		 g.tm.setText(String.valueOf(g.tmc));
       			mcqbundel testa=new mcqbundel();
       			testa.title="\\question {"+Title.getText()+".\r\n";
       			testa.utitle=Title.getText();
       			mcqo r=new mcqo(sqn,MCQ);
       			r.subquestion=Question.getText();
       			r.ans1=Op1.getText();
       			r.ans2=Op1.getText();
       			r.ans3=Op1.getText();
       			r.ans4=Op1.getText();
       			r.mark=mks.getValue().toString();
       			r.btarea=area.getSelectedItem().toString();
       		    testa.mcqlist.put(sqn,r);
       		    pic="";
  		        abimgpath="";
       			g.mapper.put(no,testa);
       		}
       		        		
       		   Question.setText("");
       		   Op1.setText("");
       		   Op2.setText("");
       		   Op3.setText("");
       		   Op4.setText(""); 
       		   
       		   g.mcqset();
       		   g.mcqupd();
       		   tst="";
       		  
       		 }
        	
        	 /*public  void mcqset() {
     			
     			String x="";
     		   	 for (Object o : g.mapper.values()){
     		   		   mcqbundel a=(mcqbundel)o;
     		   		   x+=a.get();
     		   		 } 
     		   	 g.mcq=x;
     		   	 }	*/
        	
        });
        
        	
        
        addopf = new javax.swing.JButton();

        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("  Title");

        jLabel2.setText("  Question No");

        chngetitle.setText("Change Title");

        jLabel3.setText("  Question");

        Table.setText("Add Table");

        jLabel4.setText("    Title No");

        jLabel5.setText("      Marks");

        Bloom.setText("Bloom Texanomy");

        Question.setColumns(20);
        Question.setRows(5);
        jScrollPane2.setViewportView(Question);

        jLabel6.setText("Option 1");

        jLabel7.setText("Option 2");

        jLabel8.setText("Option 3");

        jLabel9.setText("Option 4");

        Op1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Op1ActionPerformed(evt);
            }
        });
        
        

        Add.setText("Add");

        addopf.setText("+Option field");
        
        //qno spiner changing
        qno.addChangeListener(new ChangeListener() {
        	public void stateChanged(ChangeEvent arg0) {
        		
        		
        		Integer no= (Integer) qno.getValue();
        	    String a=no.toString();
        	    int r=no.intValue();
        	    
        	    
        	    
        		if(g.mapper.containsKey(r)){
        	    	mcqbundel o=(mcqbundel)g.mapper.get(r);
        	    	String tit=o.utitle;
        	    	mcqo mc=(mcqo)o.mcqlist.get(1);
        	    	Title.setText(tit);
        	    	Question.setText(mc.subquestion);
        	    	Op1.setText(mc.ans1);
        	    	Op2.setText(mc.ans2);
        	    	Op3.setText(mc.ans3);
        	    	Op4.setText(mc.ans4);
        	    	area.setSelectedItem(mc.btarea);
        	    	Double marks=Double.parseDouble(mc.mark);
        	    	mks.setValue(marks);
        	    	
        	    	
        			
        	    }
        		else{
        			 Title.setText("");
        			 Question.setText("");
         	    	Op1.setText("");
         	    	Op2.setText("");
         	    	Op3.setText("");
         	    	Op4.setText("");
        		}
        	    
        	    
        		
        	}
        });
        //sqno spinner changing
        sqno.addChangeListener(new ChangeListener() {
        	public void stateChanged(ChangeEvent arg0) {
        		
        		
        		Integer no= (Integer) sqno.getValue();
        	    String a=no.toString();
        	    int r=no.intValue();
        	    
        	    
        	    Integer no1=(Integer)qno.getValue();
        		mcqbundel mcb=(mcqbundel)g.mapper.get(no1);
        		if(mcb.mcqlist.containsKey(no)){
        		mcqo o=(mcqo)mcb.mcqlist.get(no);
        		Question.setText(o.subquestion);
    	    	Op1.setText(o.ans1);
    	    	Op2.setText(o.ans2);
    	    	Op3.setText(o.ans3);
    	    	Op4.setText(o.ans4);
    	    	Double marks=Double.parseDouble(o.mark);
    	    	mks.setValue(marks);
    	    	area.setSelectedItem(o.btarea);
        			
        			
        		}
        		else{
        			Question.setText("");
         	    	Op1.setText("");
         	    	Op2.setText("");
         	    	Op3.setText("");
         	    	Op4.setText("");	
        			
        		}
        			
        			
        			/*if(g.mapper.containsKey(r)){
        	    	mcqbundel o=(mcqbundel)g.mapper.get(r);
        	    	String tit=o.utitle;
        	    	
        	    	Title.setText(tit);
        			
        	    }
        		else{
        			 Title.setText("");
        		}*/
        	    
        	    
        		
        	}
        });
        
        lblArea = new JLabel("Area");
        
        area = new JComboBox();
        area.setModel(new DefaultComboBoxModel(new String[] {"Remembering", "Understanding", "Applying", "Analyzing", "Evaluating", "Creating"}));
        
        btnAddMath = new JButton("Add Math");
        int caret=Question.getCaretPosition();
        btnAddMath.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		try {
        			
        			
                    // Create an instance of our application.
                    //JaTeX j=new JaTeX();
                	if(main != null){
                		main.textArea = textArea;
                		main.textField = textField;
                		main.curPos = curPos;
                		main.setVisible(true);
                	}else{
                		main = new MainWindow(textField,textArea,null,null,curPos);
                		main.setVisible(true);
                	}
                	//BufferedReader b=new BufferedReader(FileReader("math.txt"));
                	
                                          

                } catch (Throwable ex) {
                    ex.printStackTrace();
                    
                }
        		
        	}
        });
        GroupLayout groupLayout = new GroupLayout(getContentPane());
        groupLayout.setHorizontalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(19)
        			.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
        			.addGap(4)
        			.addComponent(Title, GroupLayout.PREFERRED_SIZE, 458, GroupLayout.PREFERRED_SIZE)
        			.addGap(17)
        			.addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)
        			.addGap(4)
        			.addComponent(qno, GroupLayout.PREFERRED_SIZE, 54, GroupLayout.PREFERRED_SIZE))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(19)
        			.addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE)
        			.addGap(421)
        			.addComponent(chngetitle, GroupLayout.PREFERRED_SIZE, 123, GroupLayout.PREFERRED_SIZE))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(19)
        			.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 496, GroupLayout.PREFERRED_SIZE)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(12)
        					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(groupLayout.createSequentialGroup()
        							.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE)
        							.addGap(4)
        							.addComponent(sqno, GroupLayout.PREFERRED_SIZE, 56, GroupLayout.PREFERRED_SIZE))
        						.addGroup(groupLayout.createSequentialGroup()
        							.addGap(6)
        							.addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 57, GroupLayout.PREFERRED_SIZE)
        							.addGap(10)
        							.addComponent(mks, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE))
        						.addGroup(groupLayout.createSequentialGroup()
        							.addGap(6)
        							.addComponent(Table, GroupLayout.PREFERRED_SIZE, 122, GroupLayout.PREFERRED_SIZE))))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(18)
        					.addComponent(btnAddMath, GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
        					.addContainerGap())))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(19)
        			.addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
        			.addGap(4)
        			.addComponent(Op3, GroupLayout.PREFERRED_SIZE, 442, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(area, 0, 122, Short.MAX_VALUE)
        			.addContainerGap())
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(19)
        			.addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
        			.addGap(4)
        			.addComponent(Op4, GroupLayout.PREFERRED_SIZE, 442, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(pic, GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
        			.addContainerGap())
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(73)
        			.addComponent(addopf)
        			.addGap(365)
        			.addComponent(Add, GroupLayout.PREFERRED_SIZE, 122, GroupLayout.PREFERRED_SIZE))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(19)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addComponent(jLabel7, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
        					.addGap(4)
        					.addComponent(Op2, GroupLayout.PREFERRED_SIZE, 442, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(lblArea))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
        					.addGap(4)
        					.addComponent(Op1, GroupLayout.PREFERRED_SIZE, 442, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(Bloom, GroupLayout.PREFERRED_SIZE, 122, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap())
        );
        groupLayout.setVerticalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(18)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
        				.addComponent(Title, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(4)
        					.addComponent(jLabel4))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(1)
        					.addComponent(qno, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        			.addGap(18)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jLabel3)
        				.addComponent(chngetitle))
        			.addGap(2)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(16)
        					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE)
        						.addComponent(sqno, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addGap(18)
        					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(groupLayout.createSequentialGroup()
        							.addGap(3)
        							.addComponent(jLabel5))
        						.addComponent(mks, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addGap(18)
        					.addComponent(Table)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(btnAddMath)))
        			.addGap(11)
        			.addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        					.addGroup(groupLayout.createSequentialGroup()
        						.addGap(3)
        						.addComponent(jLabel6))
        					.addComponent(Op1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addComponent(Bloom)
        					.addPreferredGap(ComponentPlacement.RELATED)))
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(11)
        					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(groupLayout.createSequentialGroup()
        							.addGap(3)
        							.addComponent(jLabel7))
        						.addComponent(Op2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addGap(11)
        					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel8)
        						.addComponent(Op3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addGap(6)
        					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel9)
        						.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
        							.addComponent(Op4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        							.addComponent(pic))))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(9)
        					.addComponent(lblArea)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(area, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        			.addGap(17)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(1)
        					.addComponent(addopf))
        				.addComponent(Add)))
        );
        getContentPane().setLayout(groupLayout);

        pack();
    }// </editor-fold>                        
    
    
    private void Op1ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
    } 
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mcqseter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mcqseter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mcqseter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mcqseter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //mcqseter mcqs=new mcqseter();
                //mcqs.setTitle("MCQ");
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField Op1;
    private javax.swing.JTextField Op2;
    private javax.swing.JTextField Op3;
    private javax.swing.JTextField Op4;
    private javax.swing.JTextArea Question;
    private javax.swing.JTextField Title;
    private javax.swing.JButton addopf;
    private javax.swing.JButton Table;
    private javax.swing.JButton chngetitle;
    private javax.swing.JButton Bloom;
    private javax.swing.JButton Add;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner qno;
    private javax.swing.JSpinner sqno;
    private javax.swing.JSpinner mks;
    private JLabel lblArea;
    private JComboBox area;
    private JButton btnAddMath;
    private final JButton pic = new JButton("Add Picture");
}
